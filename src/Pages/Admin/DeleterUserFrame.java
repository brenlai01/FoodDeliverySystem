package Pages.Admin;
import FileManager.*;
import Models.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class DeleterUserFrame extends javax.swing.JFrame {
    
    private Admin admin;
    
    public DeleterUserFrame() {
        this.admin = (Admin) CurrentUser.getLoggedInUser();
        initComponents();
        addUserSelectionListener();
        addSearchFieldListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Admin = new javax.swing.JLabel();
        UserPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        selectedUserField = new javax.swing.JFormattedTextField();
        DeleteButton = new javax.swing.JButton();
        ReturnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(385, 380));

        MainPanel.setPreferredSize(new java.awt.Dimension(370, 350));
        MainPanel.setRequestFocusEnabled(false);
        MainPanel.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(470, 35));

        Admin.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Admin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Admin.setText("Admin Dashboard");
        Admin.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Admin.setPreferredSize(new java.awt.Dimension(400, 25));
        Admin.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Admin, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Admin, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        MainPanel.add(jPanel2, java.awt.BorderLayout.NORTH);

        UserPanel.setPreferredSize(new java.awt.Dimension(440, 215));

        jLabel6.setText("Search");

        searchField.setPreferredSize(new java.awt.Dimension(100, 25));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Users");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(180, 200));

        jScrollPane1.setViewportView(userList);

        jLabel2.setText("Selected User");

        selectedUserField.setPreferredSize(new java.awt.Dimension(140, 25));
        selectedUserField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedUserFieldActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.setPreferredSize(new java.awt.Dimension(80, 25));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        ReturnButton.setText("Return");
        ReturnButton.setPreferredSize(new java.awt.Dimension(80, 25));
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserPanelLayout = new javax.swing.GroupLayout(UserPanel);
        UserPanel.setLayout(UserPanelLayout);
        UserPanelLayout.setHorizontalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(UserPanelLayout.createSequentialGroup()
                                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(105, 105, 105)
                                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectedUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))))
                    .addGroup(UserPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        UserPanelLayout.setVerticalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectedUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        MainPanel.add(UserPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        
    }//GEN-LAST:event_searchFieldActionPerformed

    private void selectedUserFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedUserFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedUserFieldActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
       
        String selectedValue = userList.getSelectedValue(); // Get Selected User String
        if (selectedValue == null) {
            JOptionPane.showMessageDialog(this, "Please select a user to Delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
        
        String uid = selectedValue.split(" - ")[0];
        
        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user: " + selectedValue + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
            
        if (confirmation == JOptionPane.YES_OPTION) {
            ArrayList<User> users = FileManager.loadUsers("users.txt");
                
            boolean deleteSucess = admin.deleteUser(users, uid);
                
            if (deleteSucess) {
                FileManager.writeUsers("users.txt", users);
                JOptionPane.showMessageDialog(null, "User has been deleted successfully.", "Sucess", JOptionPane.INFORMATION_MESSAGE);
                updateUserList("");
                selectedUserField.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Error deleting user.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        new AdminFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ReturnButtonActionPerformed

    // Display all users at the start of program
    public void updateUserList(String query) {
        
        ArrayList<User> users = FileManager.loadUsers("users.txt");
        ArrayList<String> displayUsers = new ArrayList<>();
        
        for (User user : users) {
            String userDisplay = user.getUid() + " - " + user.getUsername();
            
            if (query.isEmpty() || userDisplay.toLowerCase().contains(query.toLowerCase())) {
                displayUsers.add(userDisplay);
            }
        }
        userList.setListData(displayUsers.toArray(new String[0]));
    }
    
    private void addUserSelectionListener() {
        
        userList.addListSelectionListener(listener -> {
            if (!listener.getValueIsAdjusting() && userList.getSelectedValue() != null) {
                String selectedUser = userList.getSelectedValue();
                String selectedUID = selectedUser.split(" - ")[0];
                
                ArrayList<User> users = FileManager.loadUsers("users.txt");
                for (User user : users) {
                    if (user.getUid().equals(selectedUID)) {
                        selectedUserField.setText(selectedUser);
                        selectedUserField.setEditable(false);
                        break;
                    }
                }
            }
        });
    }
    
    private void addSearchFieldListener() {                                         
        searchField.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void insertUpdate(DocumentEvent e){
                updateUserList(searchField.getText().trim());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateUserList(searchField.getText().trim());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateUserList(searchField.getText().trim());
            }
        });  
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleterUserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleterUserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleterUserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleterUserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeleterUserFrame frame = new DeleterUserFrame();
                frame.setVisible(true);
                frame.updateUserList("");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Admin;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JPanel UserPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchField;
    private javax.swing.JFormattedTextField selectedUserField;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
